#include <stdio.h>
#include <string.h>
#include <ctype.h>

#define ALPHABET_SIZE 26
#define MAX_TEXT_SIZE 1000

double englishLetterFreq[ALPHABET_SIZE] = {
    8.167, 1.492, 2.782, 4.253, 12.702, 2.228, 2.015, 6.094, 6.966, 0.153,
    0.772, 4.025, 2.406, 6.749, 7.507, 1.929, 0.095, 5.987, 6.327, 9.056,
    2.758, 0.978, 2.360, 0.150, 1.974, 0.074
};

void countLetterFrequency(char *text, int *freq) {
    for (int i = 0; i < ALPHABET_SIZE; i++) {
        freq[i] = 0;
    }

    int len = strlen(text);
    for (int i = 0; i < len; i++) {
        if (isalpha(text[i])) {
            freq[text[i] - 'a']++;
        }
    }
}

void substitutionAttack(char *ciphertext, int topN) {
    int freq[ALPHABET_SIZE];
    countLetterFrequency(ciphertext, freq);

    char plaintext[MAX_TEXT_SIZE];
    int len = strlen(ciphertext);

    int sortedFreqIndices[ALPHABET_SIZE];
    for (int i = 0; i < ALPHABET_SIZE; i++) {
        sortedFreqIndices[i] = i;
    }


    for (int i = 0; i < ALPHABET_SIZE - 1; i++) {
        for (int j = i + 1; j < ALPHABET_SIZE; j++) {
            if (freq[sortedFreqIndices[i]] < freq[sortedFreqIndices[j]]) {
                int temp = sortedFreqIndices[i];
                sortedFreqIndices[i] = sortedFreqIndices[j];
                sortedFreqIndices[j] = temp;
            }
        }
    }

    char bestPlaintexts[topN][MAX_TEXT_SIZE];


    for (int t = 0; t < topN; t++) {
        for (int i = 0; i < len; i++) {
            if (isalpha(ciphertext[i])) {
                int cipherIndex = sortedFreqIndices[ciphertext[i] - 'a'];
                int plainIndex = (t + cipherIndex) % ALPHABET_SIZE;
                plaintext[i] = 'a' + plainIndex;
            } else {
                plaintext[i] = ciphertext[i];
            }
        }
        plaintext[len] = '\0';
        strcpy(bestPlaintexts[t], plaintext);
    }

   
    printf("Top %d possible plaintexts:\n", topN);
    for (int i = 0; i < topN; i++) {
        printf("%d: %s\n", i + 1, bestPlaintexts[i]);
    }
}

int main() {
    char ciphertext[MAX_TEXT_SIZE];
    int topN = 10;

    printf("Enter the ciphertext: ");
    scanf("%s", ciphertext);

    substitutionAttack(ciphertext, topN);

    return 0;
}
