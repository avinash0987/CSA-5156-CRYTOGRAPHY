#include <stdio.h>
#include <string.h>
#include <ctype.h>

void generateKeyTable(char key[], char keyTable[5][5]) {
    int dict[26] = {0};
    int i, j, k;
    int idx = 0;

    for (i = 0; i < strlen(key); i++) {
        if (key[i] != 'j' && !dict[key[i] - 'a']) {
            dict[key[i] - 'a'] = 1;
        }
    }

    for (i = 0; i < 5; i++) {
        for (j = 0; j < 5; ) {
            if (key[idx] != 'j' && dict[key[idx] - 'a'] == 1) {
                keyTable[i][j++] = key[idx];
                dict[key[idx] - 'a'] = -1;
            }
            idx++;
        }
    }

    for (i = 0; i < 26; i++) {
        if (i != 9 && dict[i] == 0) {
            for (j = 0; j < 5; j++) {
                if (keyTable[i][j] == '\0') {
                    keyTable[i][j] = i + 'a';
                }
            }
        }
    }
}

void decrypt(char str[], char keyTable[5][5]) {
    int i, a, b, c, d;
    char digraph[2];

    for (i = 0; i < strlen(str); i += 2) {
        digraph[0] = tolower(str[i]);
        digraph[1] = tolower(str[i + 1]);
        int flag = 0;

        for (a = 0; a < 5; a++) {
            for (b = 0; b < 5; b++) {
                if (keyTable[a][b] == digraph[0]) {
                    for (c = 0; c < 5; c++) {
                        for (d = 0; d < 5; d++) {
                            if (keyTable[c][d] == digraph[1]) {
                                if (a == c) {
                                    printf("%c%c", keyTable[a][(b + 4) % 5], keyTable[c][(d + 4) % 5]);
                                } else if (b == d) {
                                    printf("%c%c", keyTable[(a + 4) % 5][b], keyTable[(c + 4) % 5][d]);
                                } else {
                                    printf("%c
